<script>
(function() {
    var canvas_id = <%= canvas_id %>.id;
    var canvas = document.getElementById(canvas_id);
    var context = canvas.getContext("2d");
    var strokes = <%= strokeorder_data %>;
    var stroke_number = strokes.length;
    var unit_distance = 2;
    var width = <%= width %>;
    var scaling = width / 400;
    var height = <%= width %>;
    var thin_line_thickness = 2;
    var thick_line_thickness = 7 * scaling;
    var blue_dot_diameter = 5 > thick_line_thickness ? thick_line_thickness : 5;
    var pixel_per_second = 160;
    var time = new Date();
    var zero_time = time.getSeconds();

    function point(x, y, canvas){
	context.beginPath();
	context.arc(x, y, 1, 0, 2 * Math.PI, true);
	context.stroke();
    }

    console.log(strokes);

    // plot each individual dot
    if (false) {
	for (var i = 0; i < strokes.length; i++) {
	    for (var j = 0; j < strokes[i].length; j++) {
		point(strokes[i][j][0], strokes[i][j][1], canvas);
	    }
	}
    }

    // rescaling
    if (scaling != 1.0) {
	for (var i = 0; i < strokes.length; i++) {
	    for (var j = 0; j < strokes[i].length; j++) {
		strokes[i][j][0] *= scaling;
		strokes[i][j][1] *= scaling;
	    }
	}
    }

    // animating

    var distances_list = [];
    var total_distance = 0;
    for (var i = 0; i < strokes.length; i++) {
	var distances = [];
	var last_x = strokes[i][0][0];
	var last_y = strokes[i][0][1];
	for (var j = 1; j < strokes[i].length; j++) {
	    var delta_x = strokes[i][j][0] - last_x;
	    var delta_y = strokes[i][j][1] - last_y;
	    var distance = Math.sqrt(Math.pow(delta_x, 2) + Math.pow(delta_y, 2));
	    total_distance += distance;
	    distances.push(distance);
	    var last_x = strokes[i][j][0];
	    var last_y = strokes[i][j][1];
	}
	distances_list.push(distances);
    }

    var index = 0;
    var i = 0;
    var j = 0;
    var flattened_points = [].concat.apply([], strokes);

    function add_original_character() {
	var text_x = canvas.width / 2;
	var text_y = canvas.height / 2;
	context.font = '300pt FangSong';
	context.fillStyle = 'gray';
	context.textAlign = 'center';
	context.textBaseline = 'middle';
	context.fillText(<%= ("'" + @hanzi.character + "'").html_safe %>, text_x, text_y);
    }

    var add_written_character = function() {
	for (var index = 0; index < flattened_points.length; index++) {
	    context.beginPath();
	    context.arc(flattened_points[index][0], flattened_points[index][1], thin_line_thickness, 0, 2 * Math.PI, true);
	    context.fillStyle = 'gray';
	    context.fill();
	    context.strokeStyle = 'gray';
	    context.stroke();
	    context.closePath();
	}
	for (var i = 0; i < strokes.length; i++) {
	    context.beginPath();
	    context.arc(strokes[i][0][0], strokes[i][0][1], blue_dot_diameter, 0, 2 * Math.PI, true);
	    context.fillStyle = 'blue';
	    context.fill();
	    context.strokeStyle = 'blue';
	    context.stroke();
	    context.closePath();
	}	
    };

    add_written_character();

    var animate_strokes = function() {
	requestAnimationFrame(animate_strokes);
	var context = document.getElementById(canvas_id).getContext('2d');

	context.beginPath();
	context.arc(flattened_points[index][0], flattened_points[index][1], thick_line_thickness, 0, 2 * Math.PI, true);
	context.fillStyle = 'black';
	context.fill();
	context.strokeStyle = 'black';
	context.stroke();
	context.closePath();

	index++;

	if (index >= flattened_points.length) {
	    context.clearRect(0, 0, canvas.width, canvas.height);
	    add_written_character();
	    index = 0;
	}	
    };

    animate_strokes();


})();
</script>
